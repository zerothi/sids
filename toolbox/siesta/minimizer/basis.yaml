# Define a level for each atom
# Atoms are defined by "tag" so one can customize by changing
# the tag/label for the specie

# All defaults are prefixed with def_* to clarify they
# don't belong to any atom set in particular.


# Create defaults
# These are definitions that should only be referenced
# through the identifiers


# Define all defaults that belong to an *atom*
def_ion_charge: &def_ion_charge
  #  charge: *def_ion_charge
  initial: 0.
  bounds: [-2., 2.]
  delta: 0.2

# Now define all variables that may be used for different
# shells.

def_soft2: &def_soft2
  # Definition of soft-confinement minimization
  # Currently this limits it-self to 500 eV as the maximum
  # potential barrier.
  V0: {initial: 0., bounds: [0., 500.], delta: 50.}
  ri: {initial: -0.8, bounds: [-1.0, -0.5], delta: 0.08}

def_soft1: &def_soft1
  # Definition of soft-confinement minimization
  V0: {initial: 0., bounds: [0., 500.], delta: 50.}

def_charge3: &def_charge3
  # Definition of charge-confinement minimization
  # The equation has Q as prefactor, and since this
  # is confinement, it should be *positive* to screen.
  # A negative Q would mean reducing the screening potential.
  Q: {initial: 0., bounds: [0., 5.], delta: 0.5}
  # Screening length (Ang-1)
  yukawa: {initial: 0., bounds: [0., 3.], delta: 0.5}
  # Width for the potential (Ang)
  width: {initial: 0., bounds: [0.0, 0.5], delta: 0.05}

def_charge2: &def_charge2
  Q: {initial: 0., bounds: [0., 5.], delta: 0.5}
  yukawa: {initial: 0., bounds: [0., 3.], delta: 0.5}

def_charge1: &def_charge1
  Q: {initial: 0., bounds: [0., 5.], delta: 0.5}

def_filter: &def_filter
  # Definition of the filter cutoff
  #  filter: *def_filter
  initial: 0.
  bounds: [0., 200.]
  delta: 20.

def_z1: &def_z1
  # Settings for single zeta n, l pairs
  # Generally such configurations are unoccupied and probably
  # a bit short...
  zeta1: {initial: 2.2, bounds: [1.5, 5.5], delta: 0.5}

def_z2: &def_z2
  # Settings for double zeta n, l pairs
  zeta1: {initial: 2.4, bounds: [1.1, 5.5], delta: 0.5}
  zeta2: {initial: 1.6, bounds: [1.1, 5.5], delta: 0.5}

def_z3: &def_z3
  # Settings for triple zeta n, l pairs, more zetas generally requires
  # longer basis sets.
  zeta1: {initial: 3.0, bounds: [1.1, 6.0], delta: 0.5}
  zeta2: {initial: 2.2, bounds: [1.1, 6.0], delta: 0.5}
  zeta3: {initial: 1.6, bounds: [1.1, 6.0], delta: 0.5}


# Combinations of the above values

def_softz1: &def_softz1
  soft: *def_soft
  zeta1: {initial: 2.2, bounds: [1.1, 5.5], delta: 0.5}

def_softz2: &def_softz2
  soft: *def_soft
  zeta1: {initial: 2.4, bounds: [1.1, 5.5], delta: 0.5}
  zeta2: {initial: 1.6, bounds: [1.1, 5.5], delta: 0.5}

def_softz3: &def_softz3
  soft: *def_soft
  zeta1: {initial: 3.0, bounds: [1.1, 6.0], delta: 0.5}
  zeta2: {initial: 2.2, bounds: [1.1, 6.0], delta: 0.5}
  zeta3: {initial: 1.6, bounds: [1.1, 6.0], delta: 0.5}



# From here on we define all atoms.
# We don't have them in any particular order but they should just be
# there.
# A double post of any item will only retain the last found.
# Please double check that the minimization values are as
# you please.


W:
  6s: *def_softz2
  6p: *def_softz1
  5d: *def_softz2

V:
  4s: *def_softz2
  4p: *def_softz1
  3d: *def_softz2

Te:
  5s: *def_softz2
  5p: *def_softz2
  4d: *def_softz1

Ta:
  6s: *def_softz2
  6p: *def_softz1
  5d: *def_softz2

Sn:
  5s: *def_softz2
  5p: *def_softz2
  5d: *def_softz1

Si:
  3s: *def_softz2
  3p: *def_softz2
  3d: *def_softz1

Se:
  4s: *def_softz2
  4p: *def_softz2
  3d: *def_softz1

Pt:
  6s: *def_softz2
  6p: *def_softz1
  5d: *def_softz2

Pd:
  5s: *def_softz2
  5p: *def_softz1
  4d: *def_softz2

Ni:
  4s: *def_softz3
  4p: *def_softz2
  3d: *def_softz3

Nb:
  5s: *def_softz2
  5p: *def_softz1
  4d: *def_softz2

Ge:
  4s: *def_softz2
  4p: *def_softz2
  4d: *def_softz1

Fe:
  4s: *def_softz3
  4p: *def_softz2
  3d: *def_softz3

Cu:
  4s: *def_softz2
  4p: *def_softz1
  3d: *def_softz2

Cr:
  4s: *def_softz2
  4p: *def_softz1
  3d: *def_softz2

C:
  2s: *def_softz2
  2p: *def_softz2
  2d: *def_softz1

Bi:
  6s: *def_softz3
  6p: *def_softz2
  6d: *def_softz2

Au:
  6s: *def_softz2
  5d: *def_softz2

Al:
  3s: *def_softz2
  3p: *def_softz2
  3d: *def_softz1

Ag:
  5s: *def_softz2
  5p: *def_softz1
  4d: *def_softz2
